When would you want to use a remote repository rather than keeping all your work
local?

    In as much as git is good to keep track of all files and their changes, they may be need to share your work with others', 
    collaborate and work with others, or to save your work online so that it you can access it from another system or 
    if your system is stolen or damaged, you can always recover your work. In all the above stated scenarios and many more,
    it is ideal to use remote repositories.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Pulling changes from remote repository is best suited manually because you determine when it is ideal to have the same content from the remote repository. Since pulling downloads the content from the remote repository, it will not always contain the latest changes and if allowed to pull automatically, it will
    override the content in the branch on the local repository. However, when you edit content on the remote 
    repository and want them synced with the local branch, you can pull the changes.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    To fork a repo is to make a copy of another person's work with a reference back to the work with the ability to suggest changes, while to clone is to copy a repo either from your or another github account. If the origin repo copied from is yours, you can make changes  and push them back but if its another persons', you cannot be able to make changes and push to their repos. Branches is  when you make a copy  a repo separately and give it a label to basically test/experiment new features to be re-added into the main program.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    When we clone a repo, git creates a branch called origin/master that holds the state of the remote branch. 
    State here implies the last commit on the remote branch (master). 
    This helps to keep track of commits on the remote branch compare to the local master branch. 
    Git uses this origin/master branch to remind you of changes you have not pushed to remote that are on the local master branch. 
    However, if you fetched the latest changes made by your collaborator, git uses this branch to indicate that 
    the changes in the remote are ahead, and you have not merge. When the remote branch is updated and 
    the local master branch is also updated, git uses this branch to compare and inform you that your 
    local and remote branches are not in sync and you need to merge. In summary, the origin/master branch is 
    essential in managing the state of the remote branch compare to your local branch.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
